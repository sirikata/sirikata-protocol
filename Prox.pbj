/*  CBR
 *  Prox.pbj
 *
 *  Copyright (c) 2009, Ewen Cheslack-Postava
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are
 *  met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of Sirikata nor the names of its contributors may
 *    be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

"pbj-0.0.3"

import "TimedMotionVector.pbj";
import "TimedMotionQuaternion.pbj";

package Sirikata.Protocol.Prox;

// Query Request

message QueryRequest {
    optional float query_angle = 1; // deprecated
    optional int32 query_max_count = 2; // deprecated
    optional bytes query_parameters = 3;
}

// Query Results

message ObjectAddition {
    required uuid object = 1;
    required Sirikata.Protocol.TimedMotionVector location = 2;
    required Sirikata.Protocol.TimedMotionQuaternion orientation = 3;
    required boundingsphere3f bounds = 4;
    required uint64 seqno = 5;
     optional string mesh = 1000;
     optional bytes physics = 1001;

    // The following are only used by certain types of query types and are used
    // in providing the structure of the query data structure as part of the
    // results.

    // Object type. Either normal object or aggregate (internal imposter)
    enum ObjectType {
        Object = 1;
        Aggregate = 2;
    }
     optional ObjectType type = 1002;

    // The parent object. Do not specify if you don't perform or expose
    // aggregates, or if this object is the root node.
     optional uuid parent = 1003;

    extensions 1010 to 65535;
}

message ObjectRemoval {
    enum RemovalType {
        Transient = 1;
        Permanent = 2;
    }

    required uuid object = 1;
    required uint64 seqno = 5;
    optional RemovalType type = 10;
}

// "Atomic" update to proximity results
message ProximityUpdate {
    repeated ObjectAddition addition = 1;
    repeated ObjectRemoval removal = 2;
}

message ProximityResults {
    required time t = 1;
    repeated ProximityUpdate update = 2;
}
